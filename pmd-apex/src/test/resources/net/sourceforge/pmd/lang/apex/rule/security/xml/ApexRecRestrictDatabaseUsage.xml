<?xml version="1.0" encoding="UTF-8"?>

<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <!-- negative tests -->
    <test-code>
        <description>Apex subclass using 1 restricted method but class is excluded</description>
        <rule-property name="classesAllowedDatabaseAccessCsv">UnitOfWork.WithoutFlsDml</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public virtual with sharing class UnitOfWork implements fflib_ISObjectUnitOfWork {
  public inherited sharing class WithoutFlsDml implements IDML {
    public List<Database.SaveResult> dmlInsert(List<SObject> objList, Boolean allOrNone) {
      if (!objList.isEmpty()) {
        return Database.insert(objList, allOrNone);
      } else {
        return new List<Database.SaveResult>();
      }
    }
    public List<Database.SaveResult> dmlUpdate(List<SObject> objList, Set<SObjectField> fields, Boolean allOrNone) {
      if (!objList.isEmpty()) {
        return Database.update(objList, allOrNone);
      } else {
        return new List<Database.SaveResult>();
      }
    }
    public List<Database.DeleteResult> dmlDelete(List<SObject> objList, Boolean allOrNone) {
      if (!objList.isEmpty()) {
        return Database.delete(objList, allOrNone);
      } else {
        return new List<Database.DeleteResult>();
      }
    }
  }
}
    ]]></code>
    </test-code>
    <test-code>
        <description>Test Apex class using 2 restricted methods </description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
@IsTest
public class BarTest {
  public void test1() {
    Database.insert(new Account());
    Database.setSavePoint();
  }
}
    ]]></code>
    </test-code>
    <test-code>
        <description>Inner test Apex class using 2 restricted methods </description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
@IsTest
public class BarTest {
    public class Foo {
        public void test1() {
            Database.insert(new Account());
            Database.setSavePoint();
        }
    }
}
    ]]></code>
    </test-code>
    <test-code>
        <description>Apex class using 2 restricted methods but excluded</description>
        <rule-property name="unrestrictedDatabaseMethodsCsv">insert,setSavepoint</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Bar {
  public void test1() {
    Database.insert(new Account());
    Database.setSavePoint();
  }
}
    ]]></code>
    </test-code>
    <test-code>
        <description>Apex class using 1 restricted method but class is excluded</description>
        <rule-property name="classesAllowedDatabaseAccessCsv">Foo</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    insert new Account();
  }
}
    ]]></code>
    </test-code>
    <test-code>
        <description>Apex class using restricted methods but method is excluded</description>
        <rule-property name="unrestrictedDatabaseMethodsCsv">insert</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Bar {
  public void test1() {
    Database.insert(new Account());
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class not touching database</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    Bar.callmethod();
  }
}
    ]]></code>
    </test-code>

     <!--keyword DML-->
    <test-code>
        <description>Apex class using unrestricted methods but excluded</description>
        <rule-property name="classesAllowedDatabaseAccessCsv">Foo</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Bar {
  public void test1() {
    insert new Account();
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly upserting accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    upsert accounts;
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly inserting accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    insert accounts;
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly deleting accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    delete accounts;
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly updating accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    update accounts;
  }
}
    ]]></code>
    </test-code>

    <!-- DML via database -->
    <test-code>
        <description>Apex class using restricted method and not excluded</description>
        <rule-property name="unrestrictedDatabaseMethodsCsv">savepoint</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Bar {
  public void test1() {
    Database.insert(new Account());
  }
}
    ]]></code>
    </test-code>
    <test-code>
        <description>Apex class directly upserting accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    Database.upsert(accounts);
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly inserting accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    Database.insert(accounts);
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly deleting accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    Database.delete(accounts);
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly updating accounts</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void test1() {
    Database.update(accounts);
  }
}
    ]]></code>
    </test-code>

    <!-- Queries -->

    <test-code>
        <description>Apex class directly querying accounts with dynamic SOQL</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public with sharing class Foo {
  public List<SObject> test1() {
      String q = 'Select Id from Account LIMIT 100';
    return Database.query(q);
  }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>Apex class directly querying accounts with inline SOQL</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public without sharing class Foo {
  public void test1() {
    List<Account> accounts = [SELECT Id FROM Account LIMIT 1];
  }
}
    ]]></code>
    </test-code>
</test-data>
